#!/usr/bin/env bash

# Synchronize the state of Neovim plugins

LOCK_REPO_NAME="mcf-nvim-lock"
LOCK_REPO_URI="git@gitlab.com:taketwo/$LOCK_REPO_NAME.git"
LOCK_REPO_PATH="$MCF/external/$LOCK_REPO_NAME"

# Clone or pull the external repository
if [ ! -d "$LOCK_REPO_PATH" ]; then
  echo "Lock repository not found, cloning"
  git clone "$LOCK_REPO_URI" "$LOCK_REPO_PATH"
else
  echo "Lock repository found, pulling latest changes"
  if ! git -C "$LOCK_REPO_PATH" pull; then
    echo "Git pull failed, aborting"
    exit 1
  fi
fi

# Copy the lock file to the local repository
LAZY_LOCK_FILE_NAME="lazy-lock.json"
LAZY_LOCK_FILE_PATH_LOCAL="$MCF/misc/packages/neovim/config/$LAZY_LOCK_FILE_NAME"
LAZY_LOCK_FILE_PATH_REMOTE="$LOCK_REPO_PATH/$LAZY_LOCK_FILE_NAME"
cp "$LAZY_LOCK_FILE_PATH_REMOTE" "$LAZY_LOCK_FILE_PATH_LOCAL"

echo "Restoring the state of Neovim plugins"
nvim --headless "+Lazy! restore" "+TSUpdateSync" +qa
echo "" # TSUpdateSync always prints a message without newline, so we add one

# After restore command has finished, the lock file should remain the same
# If it is not the same, it means that there was an issue during restoration
if ! git -C "$LOCK_REPO_PATH" diff --quiet "$LAZY_LOCK_FILE_NAME"; then
  echo "Lock file has changed while executing restore command, this indicates there was an issue"
  echo "Lock file diff:"
  git -C "$LOCK_REPO_PATH" diff "$LAZY_LOCK_FILE_NAME"
  exit 2
else
  echo "Restoration succeeded"
fi

if [ "$1" = "--update" ]; then
  echo "Launching Neovim to update plugins"
  nvim -c 'autocmd User VeryLazy Lazy check'
  cp "$LAZY_LOCK_FILE_PATH_LOCAL" "$LAZY_LOCK_FILE_PATH_REMOTE"
  # Check if the lock file has changed
  if ! git -C "$LOCK_REPO_PATH" diff --quiet "$LAZY_LOCK_FILE_NAME"; then
    echo "Lock file has changed, committing and pushing changes"
    git -C "$LOCK_REPO_PATH" add "$LAZY_LOCK_FILE_NAME"
    git -C "$LOCK_REPO_PATH" commit -m "Update $LAZY_LOCK_FILE_NAME" -m "Host: $(hostname -s)"
    git -C "$LOCK_REPO_PATH" push
  else
    echo "Lock file has not changed"
  fi
fi

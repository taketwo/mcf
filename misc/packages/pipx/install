#!/usr/bin/env bash

# Copied from: https://stackoverflow.com/a/4024263/1525865
verlte()
{
  [ "$1" = "$(echo -e "$1\\n$2" | sort -V | head -n1)" ]
}

verlt()
{
  if [ "$1" = "$2" ]; then
    return 1
  else
    verlte "$1" "$2"
  fi
}

required="3.9.1"
actual=$(python3 --version | cut -d ' ' -f2)

if verlt "$actual" "$required"; then
  # If pyenv is not in the PATH (happens during bootstrapping), temporary add it
  [[ ":$PATH:" != *"pyenv"* ]] && PATH="${HOME}/.pyenv/bin:${PATH}"
  # System version of Python is too old, use pyenv
  eval "$(pyenv init -)"
  # Check if required version of Python is installed with pyenv
  if pyenv versions | grep -vq "$required"; then
    PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install --skip-existing "$required"
  fi
  pyenv shell "$required"
fi

# Install pipx via system pip
pip3 install --user --no-warn-script-location pipx
# Install pipx via pipx (-f to force overwrite the binary installed with previous command)
python3 -m pipx install -f pipx
# Store pipx symlink
pipx_where="$HOME/.local/bin/pipx"
pipx_where_actual=$(readlink "$pipx_where")
# Uninstall pipx from system pip (this removes pipx symlink installed by pipx)
pip3 uninstall -y pipx
# Recover symlink
ln -s "$pipx_where_actual" "$pipx_where"
